# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time
import datetime
import re
import _thread
import random

orders = {
    'red': "üî¥ –ö—Ä–∞—Å–Ω—ã–π",
    'black': "‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π",
    'white': "‚ö™Ô∏è –ë–µ–ª—ã–π",
    'yellow': "üåï –ñ–µ–ª—Ç—ã–π",
    'blue': 'üîµ –°–∏–Ω–∏–π',
    'deystviya': "üïπ –î–µ–π—Å—Ç–≤–∏—è",
    'progulka': "üö∂ –ì—É–ª—è–µ–º",
    'kitayskiy': "üè™ –ì—Ä–∞–±–∏–º",
    'cover': "üõ° –ó–∞—â–∏—Ç–∞",
    'attack': 'üí• –ê—Ç–∞–∫–∞',
    'cover_symbol': "üõ°",
    'hero': "üë§ –ü—Ä–æ—Ñ–∏–ª—å"
}

bot_username = "CityWars_bot"
# username –±–æ—Ç–∞ –∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã, —Å—Ç–∞–≤–∏—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
order_username = "naeternitas"
# –≤–∞—à username, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É, —Å—Ç–∞–≤–∏—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
admin_username = "yellow_bluebus"
# –ø–æ–º–µ–Ω—è—Ç—å blue –Ω–∞ red, black, white, yellow –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞
castle = orders['yellow']
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle}

sender = Sender(host="localhost", port=1338)
action_list = deque([])
log_list = deque([], maxlen=30)
lt_arena = 0
get_info_diff = 360
hero_message_id = ''


@coroutine
def work_with_message(receiver):
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and msg['unread'] and 'text' in msg and msg['peer'] is not None:
                parse_text(msg['text'], msg['sender']['username'], msg['id'])

        except Exception as err:
            log("–û—à–∏–±–∫–∞ coroutine: {0}".format(err))


def queue_worker(time_between_commands):
    global get_info_diff
    last_command_time = time()
    lt_info = 0
    while True:
        try:
            if time() - last_command_time > time_between_commands:
                last_command_time = time()
                if time() - lt_info > get_info_diff:
                    lt_info = time()
                    get_info_diff = random.randint(300, 550)
                    sender.send_msg('@' + bot_username, orders['hero'])
                    continue

                if len(action_list):
                    log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º " + action_list[0])
                    sender.send_msg('@' + bot_username, action_list.popleft())
        except Exception as err:
            log("–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}".format(err))


def parse_text(text, username, message_id):
    global lt_arena
    if username == bot_username:
        log("–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è")
        if text.find("–î–æ –±–∏—Ç–≤—ã –æ—Å—Ç–∞–ª–æ—Å—å") != -1:
            global hero_message_id
            hero_message_id = message_id
            m = re.search('–î–æ –±–∏—Ç–≤—ã –æ—Å—Ç–∞–ª–æ—Å—å(?: ([0-9]+)—á){0,1}(?: ([0-9]+)){0,1}', text)
            if not m.group(1):
                if m.group(2) and int(m.group(2)) < 25:
                    log("–î–æ –±–∏—Ç–≤—ã –º–µ–Ω—å—à–µ 25 –º–∏–Ω—É—Ç!")
                    # –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
                    state = re.search('–°–æ—Å—Ç–æ—è–Ω–∏–µ:\\n(.*)$', text)
                    if time() - current_order['time'] > 3600:
                        update_order(castle)
                    if current_order['order'] not in action_list:
                        if current_order['order'] == castle and (state.group(1).find(orders['cover_symbol']) == -1 or state.group(1).find(castle) == -1):
                            log("–ó–∞—â–∏—Ç–∞ –∫–≤–∞—Ä—Ç–∞–ª–∞")
                            action_list.append(orders['cover'])
                            action_list.append(castle)
                        elif current_order['order'] == orders['progulka'] and state.group(1).find(orders['les']) == -1:
                            log("–ì—É–ª—è–µ–º")
                            action_list.append(current_order['order'])
                        elif current_order['order'] == orders['kitayskiy'] and state.group(1).find(orders['gora']) == -1:
                            log("–ì—Ä–∞–±–∏–º")
                            action_list.append(current_order['order'])
                        elif state.group(1).find(current_order['order']) == -1:
                            log("–ü—Ä–∏–∫–∞–∑ " + current_order['order'])
                            action_list.append(orders['attack'])
                            action_list.append(current_order['order'])
                    return
            log("–í—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ")
            # —Ç–µ–ø–µ—Ä—å —É–∑–Ω–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —É –Ω–∞—Å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –∏ –¥–µ–Ω–µ–≥
            m = re.search('–î–µ–Ω—å–≥–∏: ([0-9]+)\\n.*–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+) –∏–∑', text)
            gold = int(m.group(1))
            endurance = int(m.group(2))
            log("–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}".format(gold, endurance))
            if gold > 5 and "/can—Åel" not in action_list and time() - lt_arena > 3600:
                action_list.append("/can—Åel")
            if endurance > 0 and "üö∂ –ì—É–ª—è–µ–º" not in action_list:
                action_list.append("üö∂ –ì—É–ª—è–µ–º")

        elif text.find(" Kill") != -1:
            sender.send_msg('@' + bot_username, '/go')

        elif text.find("–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã") != -1:
            lt_arena = time()
            attack_chosen = arena_attack[random.randint(0, 2)]
            cover_chosen = arena_cover[random.randint(0, 2)]
            log("–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}".format(attack_chosen, cover_chosen))
            action_list.append(attack_chosen)
            action_list.append(cover_chosen)

    else:
        if username == order_username:
            if text.find(orders['red']) != -1:
                update_order(orders['red'])
            elif text.find(orders['black']) != -1:
                update_order(orders['black'])
            elif text.find(orders['white']) != -1:
                update_order(orders['white'])
            elif text.find(orders['yellow']) != -1:
                update_order(orders['yellow'])
            elif text.find(orders['blue']) != -1:
                update_order(orders['blue'])
            elif text.find('üö∂') != -1:
                update_order(orders['lesnoi_fort'])
            elif text.find('üè™') != -1:
                update_order(orders['gorni_fort'])
            elif text.find('üõ°') != -1:
                update_order(castle)

        if username == admin_username:
            if text == "#help":
                sender.send_msg('@' + admin_username, "#getlog\n#ping\n#lt_arena\n#order\n#time\n#get_info_diff\n#push_order\n#get_hero")
            if text == "#getlog":
                sender.send_msg('@' + admin_username, "\n".join(log_list))
                log_list.clear()
            if text == "#ping":
                sender.send_msg('@' + admin_username, "#pong")
            if text == "#lt_arena":
                sender.send_msg('@' + admin_username, str(lt_arena))
            if text == "#order":
                text_date = datetime.datetime.fromtimestamp(current_order['time']).strftime('%Y-%m-%d %H:%M:%S')
                sender.send_msg('@' + admin_username, current_order['order'] + " " + text_date)
            if text == "#time":
                text_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                sender.send_msg('@' + admin_username, text_date)
            if text == "#get_info_diff":
                sender.send_msg('@' + admin_username, str(get_info_diff))
            if text == "#get_hero":
                if hero_message_id == '':
                    sender.send_msg('@' + admin_username, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ –ø–æ–∫–∞ –Ω–µ –±—ã–ª–æ")
                else:
                    sender.fwd('@' + admin_username, hero_message_id)
            if text.startswith("#push_order"):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    sender.send_msg('@' + admin_username, "–ö–æ–º–∞–Ω–¥–∞ " + command + " –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
                else:
                    sender.send_msg('@' + admin_username, "–ö–æ–º–∞–Ω–¥–∞ " + command + " –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")


def update_order(order):
    current_order['order'] = order
    current_order['time'] = time()
    action_list.append(orders['hero'])


def log(text):
    message = '{0:%Y-%m-%d %H:%M:%S}'.format(datetime.datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


if __name__ == '__main__':
    receiver = Receiver(port=1338)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, (3, ))
    receiver.message(work_with_message(receiver))
    receiver.stop()
